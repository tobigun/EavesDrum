// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------- //
// capsense //
// -------- //

#define capsense_wrap_target 0
#define capsense_wrap 16
#define capsense_pio_version 0

static const uint16_t capsense_program_instructions[] = {
            //     .wrap_target
    0xa02b, //  0: mov    x, !null                   
    0x80a0, //  1: pull   block                      
    0xa047, //  2: mov    y, osr                     
    0x0084, //  3: jmp    y--, 4                     
    0xe080, //  4: set    pindirs, 0                 
    0x00c7, //  5: jmp    pin, 7                     
    0x0005, //  6: jmp    5                          
    0xe081, //  7: set    pindirs, 1                 
    0xff00, //  8: set    pins, 0                [31]
    0xe080, //  9: set    pindirs, 0                 
    0x00cc, // 10: jmp    pin, 12                    
    0x004a, // 11: jmp    x--, 10                    
    0x0087, // 12: jmp    y--, 7                     
    0xa0c1, // 13: mov    isr, x                     
    0x8020, // 14: push   block                      
    0xe081, // 15: set    pindirs, 1                 
    0xe000, // 16: set    pins, 0                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program capsense_program = {
    .instructions = capsense_program_instructions,
    .length = 17,
    .origin = -1,
    .pio_version = 0,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config capsense_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + capsense_wrap_target, offset + capsense_wrap);
    return c;
}
#endif

